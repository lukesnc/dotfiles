#!/usr/bin/env bash

set -eo pipefail

if [[ "$OSTYPE" != "darwin"* ]]; then
    echo "error: this should only be ran on macOS"
    exit 1
fi

show_help() {
    cat <<EOF
usage: ${0##*/} [-32ah] FILE ...
Quickly rip the vst3/vst/component folder out of a plugin installer package.
depends: bsdtar pkgutil p7zip
  -3  Search for VST3 assets [.vst3] (default mode)
  -2  Search for VST2 assets [.vst]
  -a  Search for AU assets [.component]
  -h  Print this message and exit
EOF
}

extract_and_install_plugin() {
    inpath="$1"
    installpath="$2"
    searchpattern="$3"
    echo "Processing $inpath"

    # Extract
    extractpath=$(mktemp -u)
    case "$inpath" in
    *.tar* | *.zip | *.7z)
        # For some reason bsdtar can handle zip, 7z + more
        command -v bsdtar
        mkdir -p "$extractpath"
        bsdtar -xzf "$inpath" -C "$extractpath"
        ;;
    *.pkg)
        command -v pkgutil
        pkgutil --expand-full "$inpath" "$extractpath"
        ;;
    *.dmg)
        command -v 7z
        7z x "$inpath" -o"$extractpath" >/dev/null
        ;;
    *)
        echo "error: unsupported archive format $1"
        return 1
        ;;
    esac

    # Find artifact and copy to VST3 path
    artifact=$(find "$extractpath" -name "$searchpattern" -print -quit)
    if [[ -z $artifact ]]; then
        echo "error: Could not find plugin assets in $extractpath"

        # Check if we should run the search again
        for ext in '*.pkg' '*.dmg' '*.tar*' '*.zip'; do
            again=$(find "$extractpath" -name "$ext" -type f -print -quit)
            if [[ -n $again ]]; then
                echo 'Found installer within parent package, retrying'
                extract_and_install_plugin "$again" "$installpath" "$searchpattern"
                return 0
            fi
        done

        return 1
    fi
    echo "Found $(basename "$artifact")"

    echo "Attempting to move plugin to $installpath"
    sudo mkdir -p "$installpath"
    sudo cp -r "$artifact" "$installpath"
    echo "Plugin successfully copied to $installpath/$(basename "$artifact")"
}

# Set mode of operation (VST3, VST, AU)
# Default mode is VST3
installpath='/Library/Audio/Plug-Ins/VST3'
searchpattern='*.vst3'

OPTIND=1
while getopts '32ah' opt; do
    case "$opt" in
    2)
        installpath='/Library/Audio/Plug-Ins/VST'
        searchpattern='*.vst'
        ;;
    a)
        installpath='/Library/Audio/Plug-Ins/Components'
        searchpattern='*.component'
        ;;
    h)
        show_help
        exit 0
        ;;
    esac
done
shift "$((OPTIND - 1))"

# Check for first arg
if [[ -z $1 ]]; then
    show_help
    exit 1
fi

# Iterate input file paths
for argv in "$@"; do
    if [[ ! -e $argv ]]; then
        echo "error: $argv is not a valid path"
        exit 1
    fi

    # NOTE: bash is strange and calling this var $inpath conflicts with
    # the $inpath in extract_and_install_plugin()
    path=$(realpath "$argv")
    extract_and_install_plugin "$path" "$installpath" "$searchpattern"

    rm -i "$path"
done
